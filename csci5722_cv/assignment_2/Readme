Matthew Beldyk
CSCI 5722 - Computer Vision
November 28, 2010

To find feature matches, I used an incredibly simplistic measure.  I created a vector that included the X,Y position of the feature, which filter I found it with, whether it is a local minimum or maximum and the filter response value.  

I create a set of these vectors for each image, then find the nearest feature vector (for each feature vector) in the next image.  In this process I also have code to make sure that I am matching minimums with minimums and maximums with maximums.  

My next step is to repeat the previous step, but looking at the previous image (so looking a step back in time.) From this I create a second feature vector list.  I then take the intersection of these two steps because I want consistency in my features whether Iâ€™m going forwards in time or back.  


For thresholds, I only look at features where the filter response is over 50 or under -50 (this cuts out a large amount of low response feature-ish features.)  Also when looking for my nearest neighbor feature between images, I make the assumtion that features will not move more than 40 pixles between images (this allows me to speed up my searches.) 

To run this program, run assignment_2.m; you'll need to change the path listed in that function to point to whereever you've stored your photos.



